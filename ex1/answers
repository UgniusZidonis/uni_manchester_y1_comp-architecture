Part 1

Q1) After obeying the "LDR R0" instruction, the value of PC is 4 and of R0
is 0.

Q2) After obeying the "LDR R1" instruction, the value of PC is 8 and of R1
is 4

Q3) After obeying the "LDR R2" instruction, the value of PC is C (8) and of R2
is 3


(For Q4 and Q5, I am asking about the registers involved in the arithmetic,
not PC/R15)

Q4) The first time the "ADD" instruction is obeyed, the value of register R0
changes from 0 to 4

Q5) The first time the "SUB" instruction is obeyed, the value of register R2
changes from 3 to 2


(For Q6, Q7, and Q8, I am asking about the effect of running the program
from the beginning until it stops at the SWI instruction, not about the
effect of just one instruction)

Q6) the "BNE" instruction is obeyed 3 times but only performs the branch 2
times

Only 2 registers (other than the PC register) change value:

Q7) register R2 counts down from 3 to 1

Q8) register R0 is modified to be the sum of memory locations R0 and R1


Part 2

Q9) The memory location for "tom" turns red because the value at location tom has been modified by the program

Q10) If you reset and run the program again without reloading it then what
happens to the value of "tom" and why: it increases and increases every time the program runs because the program store the value of R0 at the end. Since R0 is loaded from the same memory location and is sumed up with a positive number it increases every time.
